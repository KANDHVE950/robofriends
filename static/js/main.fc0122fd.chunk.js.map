{"version":3,"sources":["serviceWorker.js","robots.js","Robo.js","CardList.js","SearchBox.js","Scroll.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","robots","id","name","username","email","Cards","props","className","src","CardList","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6CClBOC,EAAS,CACpB,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2BCtCIC,EAjBD,SAACC,GAAW,IAChBL,EAA8BK,EAA9BL,GAAIC,EAA0BI,EAA1BJ,KAAMC,EAAoBG,EAApBH,SAAUC,EAAUE,EAAVF,MACxB,OACG,yBAAKG,UAAU,uDACb,yBAAMC,IAAG,+BAA0BP,EAA1B,cACT,6BACC,2BAAIC,GACJ,2BAAIC,GACJ,2BAAIC,MCUDK,EAnBE,SAAC,GAAgB,IAAdT,EAAa,EAAbA,OAEnB,OACM,iCACDA,EAAOU,KAAI,SAACC,EAAKC,GACnB,OACQ,kBAAC,EAAD,CACGC,IAAKD,EACLX,GAAID,EAAOY,GAAGX,GACdC,KAAMF,EAAOY,GAAGV,KAChBE,MAAOJ,EAAOY,GAAGR,MACjBD,SAAUH,EAAOY,GAAGT,gBCApBW,EAZI,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEpB,OACO,yBAAKR,UAAU,OACd,2BAAOA,UAAU,uBAChBS,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCLI,G,MARA,SAACb,GACf,OACO,yBAAKc,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAClEjB,EAAMkB,YCkDDC,E,YA/Cd,aAAe,IAAD,8BACb,+CAeDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAfzC,EAAKC,MAAQ,CACZhC,OAAQ,GACR6B,YAAa,IAJD,E,iFAOO,IAAD,OAEnBI,MAAM,8CAA8CC,MAAK,SAAAC,GACxD,OAAOA,EAASC,UAEhBF,MAAK,SAAAG,GACL,EAAKT,SAAS,CAAC5B,OAAQA,S,+BAQf,IAAD,OACFsC,EAAiBC,KAAKP,MAAMhC,OAAOwC,QAAO,SAAAC,GAC/C,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAEjE,OAAiC,IAA7BH,KAAKP,MAAMhC,OAAO4C,OACd,wBAAIrC,UAAU,MAAd,WAIA,yBAAKA,UAAU,MACd,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWQ,aAAcwB,KAAKb,iBAC9B,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAU1B,OAASsC,U,GAnCdO,aCAlBC,IAASC,OACH,kBAAC,EAAD,MACHC,SAASC,eAAe,SP0HrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlB,MAAK,SAAAmB,GACjCA,EAAaC,iB","file":"static/js/main.fc0122fd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React, { Component } from 'react';\n\n\n\nconst Cards = (props) => {\n  const { id, name, username, email } = props;\n      return (\n         <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-S\">\n           <img  src={`https://robohash.org/${id}?100*100`} />\n           <div>\n            <p>{name}</p>\n            <p>{username}</p>\n            <p>{email}</p>\n           </div>\n\n         </div>\n        )\n\n}\n\n\nexport default Cards;\n","import React, { Component } from 'react';\nimport Cards from './Robo.js';\n\nconst CardList = ({ robots }) => {\n\t\n\treturn (\n       <div> {\n\t     robots.map((user,i) => {\n\t\t  return (\n            <Cards \n               key={i} \n               id={robots[i].id} \n               name={robots[i].name} \n               email={robots[i].email} \n               username={robots[i].username}\n             />\n          );\n\t     })\n        }\n       </div>\n\t);\n}\nexport default CardList;","import React, {Component} from 'react';\n\nconst  SearchBox = ({searchChange}) => {\n\n\treturn (\n        <div className=\"pa2\">\n        \t<input className=\"pa1 bg-lightest-blue\"\n        \t type=\"search\"\n        \t placeholder=\"search robots\"\n        \t onChange={searchChange} />\n\n        </div>\n\t\t);\n}\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props)=> {\n\treturn (\n        <div style={{overflow: 'scroll', border: '5px solid black', height: '500px' }}>\n        \t{props.children}\n        </div>\n\t);\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport {robots} from './robots.js';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox.js';\nimport './App.css';\nimport Scroll from './Scroll'\n\nclass App extends Component  {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\t//this.setState({robots: robots})\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response => {\n\t\t\treturn response.json();\n\t\t})\n\t\t.then(users => {\n\t\t\tthis.setState({robots: robots})\n\t\t})\n\t}\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value })\n\t\t//console.log(filteredRobots);\n\t\t\n\t}\n\trender() {\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n\t\t});\n\t\tif (this.state.robots.length === 0) {\n\t\t\treturn <h1 className=\"tc\">LOADING</h1>\n\t\t}\n\t\telse {\n\t\t\treturn (\n          <div className=\"tc\">\n           <h1 className=\"f1\">RoboFriends</h1>\n           <SearchBox searchChange={this.onSearchChange} />\n           <Scroll>\n             <CardList robots={ filteredRobots } />\n           </Scroll>  \n          </div>  \n        );\n\t\t}\n\t\t\n\t}\n  \n}\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './App.js';\n\nReactDOM.render (\n      <App />\n\t ,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}